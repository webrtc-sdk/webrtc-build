diff --git a/modules/video_coding/codecs/test/android_codec_factory_helper.cc b/modules/video_coding/codecs/test/android_codec_factory_helper.cc
index d1be684cbb..812c3eb5dc 100644
--- a/modules/video_coding/codecs/test/android_codec_factory_helper.cc
+++ b/modules/video_coding/codecs/test/android_codec_factory_helper.cc
@@ -51,9 +51,9 @@ void InitializeAndroidObjects() {
 std::unique_ptr<VideoEncoderFactory> CreateAndroidEncoderFactory() {
   JNIEnv* env = AttachCurrentThreadIfNeeded();
   ScopedJavaLocalRef<jclass> factory_class =
-      GetClass(env, "org/webrtc/HardwareVideoEncoderFactory");
+      GetClass(env, "livekit/org/webrtc/HardwareVideoEncoderFactory");
   jmethodID factory_constructor = env->GetMethodID(
-      factory_class.obj(), "<init>", "(Lorg/webrtc/EglBase$Context;ZZ)V");
+      factory_class.obj(), "<init>", "(Llivekit/org/webrtc/EglBase$Context;ZZ)V");
   ScopedJavaLocalRef<jobject> factory_object(
       env, env->NewObject(factory_class.obj(), factory_constructor,
                           nullptr /* shared_context */,
@@ -65,9 +65,9 @@ std::unique_ptr<VideoEncoderFactory> CreateAndroidEncoderFactory() {
 std::unique_ptr<VideoDecoderFactory> CreateAndroidDecoderFactory() {
   JNIEnv* env = AttachCurrentThreadIfNeeded();
   ScopedJavaLocalRef<jclass> factory_class =
-      GetClass(env, "org/webrtc/HardwareVideoDecoderFactory");
+      GetClass(env, "livekit/org/webrtc/HardwareVideoDecoderFactory");
   jmethodID factory_constructor = env->GetMethodID(
-      factory_class.obj(), "<init>", "(Lorg/webrtc/EglBase$Context;)V");
+      factory_class.obj(), "<init>", "(Llivekit/org/webrtc/EglBase$Context;)V");
   ScopedJavaLocalRef<jobject> factory_object(
       env, env->NewObject(factory_class.obj(), factory_constructor,
                           nullptr /* shared_context */));
diff --git a/sdk/android/BUILD.gn b/sdk/android/BUILD.gn
index 494b43f6d3..1a63c66558 100644
--- a/sdk/android/BUILD.gn
+++ b/sdk/android/BUILD.gn
@@ -1308,6 +1308,7 @@ if (current_os == "linux" || is_android) {
     sources = [ "api/org/webrtc/Metrics.java" ]
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   # Generated JNI for public JNI targets, matching order of targets
@@ -1322,6 +1323,7 @@ if (current_os == "linux" || is_android) {
     ]
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_video_jni") {
@@ -1352,12 +1354,14 @@ if (current_os == "linux" || is_android) {
     ]
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_video_egl_jni") {
     sources = [ "src/java/org/webrtc/EglBase10Impl.java" ]
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_libvpx_vp8_jni") {
@@ -1368,6 +1372,7 @@ if (current_os == "linux" || is_android) {
 
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_libvpx_vp9_jni") {
@@ -1378,6 +1383,7 @@ if (current_os == "linux" || is_android) {
 
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_libaom_av1_encoder_jni") {
@@ -1385,6 +1391,7 @@ if (current_os == "linux" || is_android) {
 
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_dav1d_jni") {
@@ -1392,6 +1399,7 @@ if (current_os == "linux" || is_android) {
 
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_swcodecs_jni") {
@@ -1402,6 +1410,7 @@ if (current_os == "linux" || is_android) {
 
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_peerconnection_jni") {
@@ -1443,12 +1452,14 @@ if (current_os == "linux" || is_android) {
     ]
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_java_audio_jni") {
     sources = [ "api/org/webrtc/audio/JavaAudioDeviceModule.java" ]
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_builtin_audio_codecs_jni") {
@@ -1458,6 +1469,7 @@ if (current_os == "linux" || is_android) {
     ]
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   # Generated JNI for native API targets
@@ -1469,6 +1481,7 @@ if (current_os == "linux" || is_android) {
     ]
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   # Generated JNI for internal targets.
@@ -1476,12 +1489,14 @@ if (current_os == "linux" || is_android) {
   generate_jni("generated_logging_jni") {
     sources = [ "src/java/org/webrtc/JNILogging.java" ]
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_audio_device_module_base_jni") {
     sources = [ "src/java/org/webrtc/audio/WebRtcAudioManager.java" ]
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 
   generate_jni("generated_java_audio_device_module_native_jni") {
@@ -1491,6 +1506,7 @@ if (current_os == "linux" || is_android) {
     ]
     namespace = "webrtc::jni"
     jni_generator_include = "//sdk/android/src/jni/jni_generator_helper.h"
+    package_prefix = android_package_prefix
   }
 }
 
diff --git a/sdk/android/api/org/webrtc/PeerConnectionFactory.java b/sdk/android/api/org/webrtc/PeerConnectionFactory.java
index 1817d41beb..1c7bfbf480 100644
--- a/sdk/android/api/org/webrtc/PeerConnectionFactory.java
+++ b/sdk/android/api/org/webrtc/PeerConnectionFactory.java
@@ -89,7 +89,7 @@ public class PeerConnectionFactory {
       private String fieldTrials = "";
       private boolean enableInternalTracer;
       private NativeLibraryLoader nativeLibraryLoader = new NativeLibrary.DefaultLoader();
-      private String nativeLibraryName = "jingle_peerconnection_so";
+      private String nativeLibraryName = "lkjingle_peerconnection_so";
       @Nullable private Loggable loggable;
       @Nullable private Severity loggableSeverity;
 
diff --git a/sdk/android/src/jni/jni_helpers.h b/sdk/android/src/jni/jni_helpers.h
index 4e5781027a..5d17a87c50 100644
--- a/sdk/android/src/jni/jni_helpers.h
+++ b/sdk/android/src/jni/jni_helpers.h
@@ -30,10 +30,10 @@
 // boundary. crbug.com/655248
 #define JNI_FUNCTION_DECLARATION(rettype, name, ...)                    \
   __attribute__((force_align_arg_pointer)) extern "C" JNIEXPORT rettype \
-      JNICALL Java_org_webrtc_##name(__VA_ARGS__)
+      JNICALL Java_livekit_org_webrtc_##name(__VA_ARGS__)
 #else
 #define JNI_FUNCTION_DECLARATION(rettype, name, ...) \
-  extern "C" JNIEXPORT rettype JNICALL Java_org_webrtc_##name(__VA_ARGS__)
+  extern "C" JNIEXPORT rettype JNICALL Java_livekit_org_webrtc_##name(__VA_ARGS__)
 #endif
 
 namespace webrtc {
diff --git a/sdk/android/src/jni/simulcast_video_encoder.cc b/sdk/android/src/jni/simulcast_video_encoder.cc
index da31fbbfa5..a9385d8b6c 100644
--- a/sdk/android/src/jni/simulcast_video_encoder.cc
+++ b/sdk/android/src/jni/simulcast_video_encoder.cc
@@ -15,7 +15,13 @@ extern "C" {
 #endif
 
 // (VideoEncoderFactory primary, VideoEncoderFactory fallback, VideoCodecInfo info)
-JNIEXPORT jlong JNICALL Java_org_webrtc_SimulcastVideoEncoder_nativeCreateEncoder(JNIEnv *env, jclass klass, jlong webrtcEnvRef, jobject primary, jobject fallback, jobject info) {
+JNI_FUNCTION_DECLARATION(jlong,
+                         SimulcastVideoEncoder_nativeCreateEncoder,
+                         JNIEnv *env,
+                         jclass klass,
+                         jobject primary,
+                         jobject fallback,
+                         jobject info) {
     RTC_LOG(LS_INFO) << "Create simulcast video encoder";
     JavaParamRef<jobject> info_ref(info);
     SdpVideoFormat format = VideoCodecInfoToSdpVideoFormat(env, info_ref);
diff --git a/tools_webrtc/android/build_aar.py b/tools_webrtc/android/build_aar.py
index d910b39a7c..d0e970cfaa 100755
--- a/tools_webrtc/android/build_aar.py
+++ b/tools_webrtc/android/build_aar.py
@@ -250,7 +250,7 @@ def BuildAar(archs,
       Collect(aar_file, build_dir, arch, unstripped)
 
   license_dir = os.path.dirname(os.path.realpath(output_file))
-  GenerateLicenses(license_dir, build_dir, archs)
+  #GenerateLicenses(license_dir, build_dir, archs)
 
   if not ext_build_dir:
     shutil.rmtree(build_dir, True)
diff --git a/webrtc.gni b/webrtc.gni
index 5e4a5d3c81..c9cb039432 100644
--- a/webrtc.gni
+++ b/webrtc.gni
@@ -254,6 +254,10 @@ declare_args() {
   #  "warn": RTC_LOGs a message with LS_WARNING severity if the field trial
   #          hasn't been registered.
   rtc_strict_field_trials = ""
+
+  if (is_android) {
+    android_package_prefix = "livekit"
+  }

  # If different from "", symbols exported with RTC_OBJC_EXPORT will be prefixed
  # with this string.
  # See the definition of RTC_OBJC_TYPE_PREFIX in the code.
 
 if (!build_with_mozilla) {
